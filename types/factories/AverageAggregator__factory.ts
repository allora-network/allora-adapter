/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  AverageAggregator,
  AverageAggregatorInterface,
} from "../AverageAggregator";

const _abi = [
  {
    type: "function",
    name: "aggregate",
    inputs: [
      {
        name: "values",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "error",
    name: "AlloraConsumerAverageAggregatorNoValuesToAggregate",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102d9806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e47811da14610030575b600080fd5b61004361003e366004610182565b610055565b60405190815260200160405180910390f35b815160009080820361007a57604051630864c1a560e41b815260040160405180910390fd5b6000805b828110156100b5578581815181106100985761009861024a565b6020026020010151826100ab9190610260565b915060010161007e565b506100c08282610281565b925050505b92915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561010a5761010a6100cb565b604052919050565b600082601f83011261012357600080fd5b813567ffffffffffffffff81111561013d5761013d6100cb565b610150601f8201601f19166020016100e1565b81815284602083860101111561016557600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561019557600080fd5b823567ffffffffffffffff808211156101ad57600080fd5b818501915085601f8301126101c157600080fd5b81356020828211156101d5576101d56100cb565b8160051b6101e48282016100e1565b928352848101820192828101908a8511156101fe57600080fd5b958301955b8487101561021c57863582529583019590830190610203565b975050508601359250508082111561023357600080fd5b5061024085828601610112565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b808201808211156100c557634e487b7160e01b600052601160045260246000fd5b60008261029e57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212203b384cf4d78360324de39ce18edc83d850eef2467a885fc4fba3f75f1f881fbf64736f6c63430008150033";

type AverageAggregatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AverageAggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AverageAggregator__factory extends ContractFactory {
  constructor(...args: AverageAggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AverageAggregator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AverageAggregator__factory {
    return super.connect(runner) as AverageAggregator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AverageAggregatorInterface {
    return new Interface(_abi) as AverageAggregatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AverageAggregator {
    return new Contract(address, _abi, runner) as unknown as AverageAggregator;
  }
}
